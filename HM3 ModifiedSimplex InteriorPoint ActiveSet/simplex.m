% 单纯形法测试，这一部分是直接使用第一型进行化简计算的，计算出了想要的结果，原因可能是因为对偶单纯形算法的性质，或者程序自动加入了松弛变量
A0 = [-1, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0;
      1, 2, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0;
      1, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0;
      2, 0, -1,1, 1,-1, 0, 0, 0, 0, 1, 0;
      0, 2, 2, 2, 2, 0,-1, 0, 0, 0, 0, 1;
      0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0;
      0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0;];
c0 = [0;0; 0;0;0; 0;0; 1;1;1; 1;1;];
b0 = [2;6;2; 2;5; 0;0;];
lb = zeros(1,12);
options = optimoptions('linprog','Algorithm','dual-simplex','Display','iter');
x = linprog(c0',[],[],A0,b0',lb,[],options)'


% 这一部分是按照转化之后的标准第二型(type 2)的形式计算的，但是有意思的是，这种情况下并没有输出想要的结果，可能这个和对偶单纯形的算法计算有关\
% 标准的方法应该是把一般的第一型(type 1)转化成第二型(type 2)，然后对第二型进行化简使用单纯形法计算。
% A = [-1,2;
%     1,2;
%     1,2;];
% A = [A,eye(3)];
% H = [2,0;
%     0,2;];
% H = [H,zeros(2,3);
%     zeros(3,2),zeros(3,3)];
% c = [-2;-5;];
% c = [c;
%     zeros(3,1);];
% b = [2;6;2];
% 
% b0 = [b;
%      -c;
%     zeros(5,1);];
% 
% c0 = [zeros(5,1);
%     zeros(3,1);
%     zeros(5,1);
%     ones(3,1);
%     ones(5,1);];
% I = [1,0,0,0,0;
%      0,1,0,0,0;
%      0,0,0,0,0;
%      0,0,0,1,0;
%      0,0,0,0,1;];
% A0 = [A, zeros(3,3),zeros(3,5),eye(3),zeros(3,5);
%       H, A',-eye(5),zeros(5,3),eye(5);
%       zeros(5,5),zeros(5,3),I,zeros(5,3),zeros(5,5)];
% lb = zeros(1,21);
% options = optimoptions('linprog','Algorithm','dual-simplex');
% x = linprog(c0',[],[],A0,b0',lb,[],options)'



